<?xml version="1.0" ?><section xml:id="chapter1_glossary">
    <title>Glossary</title>
    <glossary>
        <gi>
            <title>problem-solving</title>
            <p>The process of formulating a problem, finding a solution, and
            expressing the solution.</p>
        </gi>
        <gi>
            <title>high-level language</title>
            <p>A programming language like C++ that is designed to be easy for
            humans to read and write.</p>
        </gi>
        <gi>
            <title>low-level language</title>
            <p>A programming language that is designed to be easy for a computer
            to execute. Also called <q>machine language</q> or <q>assembly language.</q></p>
        </gi>
        <gi>
            <title>portability</title>
            <p>A property of a program that can run on more than one kind of
            computer.</p>
        </gi>
        <gi>
            <title>formal language</title>
            <p>Any of the languages people have designed for specific purposes,
            like representing mathematical ideas or computer programs. All
            programming languages are formal languages.</p>
        </gi>
        <gi>
            <title>natural language</title>
            <p>Any of the languages people speak that have evolved naturally.</p>
        </gi>
        <gi>
            <title>interpret</title>
            <p>To execute a program in a high-level language by translating it one
            line at a time.</p>
        </gi>
        <gi>
            <title>compile</title>
            <p>To translate a program in a high-level language into a low-level
            language, all at once, in preparation for later execution.</p>
        </gi>
        <gi>
            <title>source code</title>
            <p>A program in a high-level language, before being compiled.</p>
        </gi>
        <gi>
            <title>object code</title>
            <p>The output of the compiler, after translating the program.</p>
        </gi>
        <gi>
            <title>executable</title>
            <p>Another name for object code that is ready to be executed.</p>
        </gi>
        <gi>
            <title>algorithm</title>
            <p>A general process for solving a category of problems.</p>
        </gi>
        <gi>
            <title>bug</title>
            <p>An error in a program.</p>
        </gi>
        <gi>
            <title>syntax</title>
            <p>The structure of a program.</p>
        </gi>
        <gi>
            <title>semantics</title>
            <p>The meaning of a program.</p>
        </gi>
        <gi>
            <title>parse</title>
            <p>To examine a program and analyze the syntactic structure.</p>
        </gi>
        <gi>
            <title>syntax error</title>
            <p>An error in a program that makes it impossible to parse (and
            therefore impossible to compile).</p>
        </gi>
        <gi>
            <title>run-time error</title>
            <p>An error in a program that makes it fail at run-time.</p>
        </gi>
        <gi>
            <title>logical error</title>
            <p>An error in a program that makes it do something other than what the
            programmer intended.</p>
        </gi>
        <gi>
            <title>debugging</title>
            <p>The process of finding and removing any of the three kinds of errors.</p>
        </gi>
    </glossary>
    <reading-questions>
  <exercise label="chapter_one_glossary_1">
    <statement>
      <p>Match each phrase with the corresponding definition by dragging the phrase into the
        appropriate box.</p>
    </statement>
    <feedback><p>
      Try again!
    </p></feedback>
    <cardsort>
      <match>
        <premise order="1">natural language</premise>
        <response>Any of the languages people speak that have evolved naturally.</response>
      </match>
      <match>
        <premise order="2">high-level language</premise>
        <response>A programming language like C++ that is easy for humans to read and write.</response>
      </match>
      <match>
        <premise order="3">low-level language</premise>
        <response>A programming language that is easy for a computer to execute.</response>
      </match>
      <match>
        <premise order="4">formal language</premise>
        <response>Any of the languages people have designed for specific purposes.</response>
      </match>
    </cardsort>
  </exercise>
  <exercise label="chapter_one_glossary_2">
    <statement>
      <p>Match each phrase with the corresponding definition by dragging the phrase into the
        appropriate box.</p>
    </statement>
    <feedback><p>
      Try again!
    </p></feedback>
    <cardsort>
      <match>
        <premise order="1">interpret</premise>
        <response>To execute a program in a high-level language by translating it one line at a
          time.</response>
      </match>
      <match>
        <premise order="2">compile</premise>
        <response>To execute a program in a high-level language by translating it all at once.</response>
      </match>
      <match>
        <premise order="3">source code</premise>
        <response>A program in a high-level language, before being compiled.</response>
      </match>
      <match>
        <premise order="4">object code</premise>
        <response>The output of the compiler, after translating the program.</response>
      </match>
    </cardsort>
  </exercise>
  <exercise label="chapter_one_glossary_3">
    <statement>
      <p>Match each phrase with the corresponding definition by dragging the phrase into the
        appropriate box.</p>
    </statement>
    <feedback><p>
      Try again!
    </p></feedback>
    <cardsort>
      <match>
        <premise order="1">portability</premise>
        <response>A property of a program that can run on more than one kind of computer.</response>
      </match>
      <match>
        <premise order="2">executable</premise>
        <response>Another name for object code that is ready to be executed.</response>
      </match>
      <match>
        <premise order="3">algorithm</premise>
        <response>A general process for solving a category of problems.</response>
      </match>
      <match>
        <premise order="4">bug</premise>
        <response>An error in a program.</response>
      </match>
    </cardsort>
  </exercise>
  <exercise label="chapter_one_glossary_4">
    <statement>
      <p>Match each phrase with the corresponding definition by dragging the phrase into the
        appropriate box.</p>
    </statement>
    <feedback><p>
      Try again!
    </p></feedback>
    <cardsort>
      <match>
        <premise order="1">problem-solving</premise>
        <response>The process of formulating a problem, finding a solution, and expressing the
          solution.</response>
      </match>
      <match>
        <premise order="2">syntax</premise>
        <response>The structure of a program.</response>
      </match>
      <match>
        <premise order="3">semantics</premise>
        <response>The meaning of a program.</response>
      </match>
      <match>
        <premise order="4">parse</premise>
        <response>To examine a program and analyze the syntactic structure.</response>
      </match>
    </cardsort>
  </exercise>
  <exercise label="chapter_one_glossary_5">
    <statement>
      <p>Match each phrase with the corresponding definition by dragging the phrase into the
        appropriate box.</p>
    </statement>
    <cardsort>
      <match>
        <premise order="1">syntax error</premise>
        <response>An error in a program that makes it impossible to parse and compile.</response>
      </match>
      <match>
        <premise order="2">run-time error</premise>
        <response>An error in a program that makes it fail upon execution.</response>
      </match>
      <match>
        <premise order="3">logical error</premise>
        <response>An error in a program that makes it do something other than what the programmer
          intended.</response>
      </match>
      <match>
        <premise order="4">debugging</premise>
        <response>The process of finding and removing any of the three kinds of errors.</response>
      </match>
    </cardsort>
  </exercise>
</reading-questions>
</section>
