<?xml version="1.0" ?><section xml:id="chapter1_formal-and-natural-languages-formal">
  <title>Formal and Natural Languages</title>
  <p><term>Natural languages</term> are the languages that people speak, like English, Spanish, and
    French. They were not designed by people (although people try to impose some order on them);
    they evolved naturally.</p>
  <p><term>Formal languages</term> are languages that are designed by people for specific
    applications. For example, the notation that mathematicians use is a formal language that is
    particularly good at denoting relationships among numbers and symbols. Chemists use a formal
    language to represent the chemical structure of molecules. And most importantly:</p>
  <note>
    <p>Programming languages are <term>formal languages</term> that have been designed to express
      computations.</p>
  </note>
  <p>As I mentioned before, formal languages tend to have strict rules about syntax. For example, <m>
    3+3=6</m> is a syntactically correct mathematical statement, but <m>3=+6\$</m> is not.
    Also, <m>H_2O</m> is a syntactically correct chemical name, but <m>_2Zz</m> is not.</p>
  <p>Syntax rules come in two flavors, pertaining to tokens and structure. Tokens are the basic
    elements of the language, like words and numbers and chemical elements. One of the problems with
    3=+6$ is that $ is not a legal token in mathematics (at least as far as I know). Similarly, <m>
    _2Zz</m> is not legal because there is no element with the abbreviation <m>Zz</m>.</p>
  <p>The second type of syntax error pertains to the structure of a
    statement; that is, the way the tokens are arranged. The statement 3=+6$
    is structurally illegal, because you can't have a plus sign immediately
    after an equals sign. Similarly, molecular formulas have to have
    subscripts after the element name, not before.</p>
  <p>When you read a sentence in English or a statement in a formal language,
    you have to figure out what the structure of the sentence is (although
    in a natural language you do this unconsciously).</p>
  <note>
    <p>The process of examining a program and analysing the syntactic structure is called <term>
      parsing</term>.</p>
  </note>
  <p>For example, when you hear the sentence, <q>The other shoe fell,</q> you understand that <q>the
    other shoe</q> is the subject and <q>fell</q> is the verb. Once you have parsed a sentence, you
    can figure out what it means, that is, the semantics of the sentence. Assuming that you know
    what a shoe is, and what it means to fall, you will understand the general implication of this
    sentence.</p>
  <p>Although formal and natural languages have many features in
    common—tokens, structure, syntax and semantics—there are many
    differences.</p>
  <p><dl>
    <li>
      <title>ambiguity:</title>
      <p>Natural languages are full of ambiguity, which people deal with by
        using contextual clues and other information. Formal languages are
        designed to be nearly or completely unambiguous, which means that
        any statement has exactly one meaning, regardless of context.</p>
    </li>
    <li>
      <title>redundancy:</title>
      <p>In order to make up for ambiguity and reduce misunderstandings,
        natural languages employ lots of redundancy. As a result, they are
        often verbose. Formal languages are less redundant and more concise.</p>
    </li>
    <li>
      <title>literalness:</title>
      <p>Natural languages are full of idiom and metaphor. If I say, <q>The
          other shoe fell,</q> there is probably no shoe and nothing falling. Formal languages mean
        exactly what they say.</p>
    </li>
  </dl></p>
  <p>People who grow up speaking a natural language (everyone) often have a
    hard time adjusting to formal languages. In some ways the difference
    between formal and natural language is like the difference between
    poetry and prose, but more so:</p>
  <p><dl>
    <li>
      <title>poetry:</title>
      <p>Words are used for their sounds as well as for their meaning, and
        the whole poem together creates an effect or emotional response.
        Ambiguity is not only common but often deliberate.</p>
    </li>
    <li>
      <title>prose:</title>
      <p>The literal meaning of words is more important and the structure
        contributes more meaning. Prose is more amenable to analysis than
        poetry, but still often ambiguous.</p>
    </li>
    <li>
      <title>programs:</title>
      <p>The meaning of a computer program is unambiguous and literal, and
        can be understood entirely by analysis of the tokens and structure.</p>
    </li>
  </dl></p>
  <p>Here are some suggestions for reading programs (and other formal
    languages). First, remember that formal languages are much more dense
    than natural languages, so it takes longer to read them. Also, the
    structure is very important, so it is usually not a good idea to read
    from top to bottom, left to right. Instead, learn to parse the program
    in your head, identifying the tokens and interpreting the structure.
    Finally, remember that the details matter. Little things like spelling
    errors and bad punctuation, which you can get away with in natural
    languages, can make a big difference in a formal language.</p>
  <exercise label="formal_natural_1">
    <statement>
      <p><term>Multiple Response</term> Select all <term>formal</term> languages from the choices
        below.</p>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>C++</p>
        </statement>
        <feedback><p>
          All programming languages are formal languages!
        </p></feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>scientific notation</p>
        </statement>
        <feedback><p>
          Scientific notation is designed to denote large numbers.
        </p></feedback>
      </choice>
      <choice>
        <statement>
          <p>Mandarin</p>
        </statement>
        <feedback><p>
          Mandarin is a natural language.
        </p></feedback>
      </choice>
      <choice>
        <statement>
          <p>English</p>
        </statement>
        <feedback><p>
          English is a natural language.
        </p></feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>chemical formulas</p>
        </statement>
        <feedback><p>
          Chemical formulas represent what elements a compound is made of! For example CO2 is is
            carbon dioxide!
        </p></feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="formal_natural_2">
    <statement>
      <p>Analyzing the structure of a sentence or a program is called <fillin answer="parsing"/>.</p>
    </statement>
    <evaluation>
      <evaluate>
        <test correct="yes">
          <strcmp use-answer="yes" case="insensitive"/>
        </test>
      </evaluate>
    </evaluation>
  </exercise>
  <exercise label="formal_natural_3">
    <statement>
      <p>Match each term to an example of it by dragging the term into the appropriate box.</p>
    </statement>
    <feedback><p>
      Try again!
    </p></feedback>
    <cardsort>
      <match>
        <premise order="1">ambiguity</premise>
        <response>being unclear and open to interpretation</response>
      </match>
      <match>
        <premise order="2">redundancy</premise>
        <response>being repetetive to get the point across</response>
      </match>
      <match>
        <premise order="3">literalness</premise>
        <response>meaning exactly what is said, nothing more</response>
      </match>
    </cardsort>
  </exercise>
  <exercise label="formal_natural_4">
    <statement>
      <p>Match each term to an example of it by dragging the term into the appropriate box.</p>
    </statement>
    <feedback><p>
      Try again!
    </p></feedback>
    <cardsort>
      <match>
        <premise order="1">ambiguity</premise>
        <response> I rode a black horse in red jacket.</response>
      </match>
      <match>
        <premise order="2">redundancy</premise>
        <response>I rode a black horse and I wore a red jacket.</response>
      </match>
      <match>
        <premise order="3">literalness</premise>
        <response> Give me a cup of water.</response>
      </match>
    </cardsort>
  </exercise>
  <exercise label="formal_natural_5">
    <statement>
      <p><term>Multiple Response</term> Formal languages are…</p>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>ambiguous</p>
        </statement>
        <feedback><p>
          Formal languages are designed to be unambiguous, so that each statement has only one
            meaning.
        </p></feedback>
      </choice>
      <choice>
        <statement>
          <p>redundant</p>
        </statement>
        <feedback><p>
          Formal language is straight to the point.
        </p></feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>literal</p>
        </statement>
        <feedback><p>
          Formal languages mean exactly what they say.
        </p></feedback>
      </choice>
      <choice>
        <statement>
          <p>verbose</p>
        </statement>
        <feedback><p>
          Formal language is straight to the point.
        </p></feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>concise</p>
        </statement>
        <feedback><p>
          Formal language is straight to the point.
        </p></feedback>
      </choice>
    </choices>
  </exercise>
</section>
